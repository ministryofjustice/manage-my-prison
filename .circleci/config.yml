version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@3.11
  slack: circleci/slack@4.4.2

parameters:
  alerts-slack-channel:
    type: string
    default: manage-my-prison-alerts

  releases-slack-channel:
    type: string
    default: manage-my-prison-alerts

  node-version:
    type: string
    default: 16.13-browsers

executors:
  integration-tests:
    docker:
      - image: cimg/node:16.13-browsers
      - image: bitnami/redis:5.0
        environment:
          ALLOW_EMPTY_PASSWORD: yes
      - image: minio/minio
        command: server /data
        environment:
          MINIO_REGION_NAME: eu-west-2
          MINIO_ROOT_USER: TEST_MINIO_ACCESS_KEY
          MINIO_ROOT_PASSWORD: TEST_MINIO_SECRET_KEY
    working_directory: ~/app

jobs:
  build:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - run:
          name: Update npm
          command: sudo npm install --global --no-audit --no-fund --no-progress npm@latest
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: npm clean-install --no-audit --no-fund --no-progress
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - ~/.cache
      - run:
          name: Build and record info
          command: |
            npm run build
            DATE=$(date '+%Y-%m-%d')
            export BUILD_NUMBER=${DATE}.${CIRCLE_BUILD_NUM}
            export GIT_REF="$CIRCLE_SHA1"
            npm run record-build-info
      - run: # Run linter after build because the integration test code depend on compiled typescript...
          name: Linter check
          command: npm run lint
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - build-info.json
            - build
            - dist
      - persist_to_workspace:
          root: ..
          paths:
            - .cache/Cypress

  check_outdated:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: npm clean-install --no-audit --no-fund --no-progress
      - run:
          name: Check version
          command: npm --version
      - run:
          name: Run check outdated npm packages
          command: |
            npm outdated typescript
            cd assets
            npm outdated typescript govuk-frontend
      - slack/notify:
          event: fail
          channel: << pipeline.parameters.alerts-slack-channel >>
          template: basic_fail_1

  unit_test:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Run unit tests
          command: npm run test
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test_results/unit-test-reports.html

  integration_test:
    executor: integration-tests
    steps:
      - hmpps/install_aws_cli
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Install missing OS dependency
          command: sudo apt-get install libxss1
      - run:
          name: Get wiremock
          command: curl -o wiremock.jar https://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-standalone/2.27.1/wiremock-standalone-2.27.1.jar
      - run:
          name: Run wiremock
          command: java -jar wiremock.jar --port 9091
          background: true
      - run:
          name: Wait for docker images to start before running tests
          command: sleep 10
      - run:
          name: Configure s3 bucket
          command: |
            export AWS_DEFAULT_REGION=eu-west-2
            export AWS_ACCESS_KEY_ID=TEST_MINIO_ACCESS_KEY
            export AWS_SECRET_ACCESS_KEY=TEST_MINIO_SECRET_KEY
            aws --endpoint-url http://localhost:9000 s3 mb s3://test-bucket
            aws --endpoint-url http://localhost:9000 s3 sync data s3://test-bucket/sandbox/
      - run:
          name: Run the node app.
          command: npm run start-feature
          background: true
      - run:
          name: Wait for node app to start
          command: sleep 5
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Run integration tests
          command: npm run int-test
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: integration-tests/videos
      - store_artifacts:
          path: integration-tests/screenshots

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - unit_test:
          requires:
            - build
      - integration_test:
          requires:
            - build
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - helm_lint
            - unit_test
            - integration_test
            - build_docker

#      - request-preprod-approval:
#          type: approval
#          requires:
#            - deploy_dev
#      - hmpps/deploy_env:
#          name: deploy_preprod
#          env: "preprod"
#          context:
#            - hmpps-common-vars
#            - manage-my-prison-preprod
#          requires:
#            - request-preprod-approval
#      - request-prod-approval:
#          type: approval
#          requires:
#            - deploy_preprod
#      - hmpps/deploy_env:
#          name: deploy_prod
#          env: "prod"
#          slack_notification: true
#          slack_channel_name: << pipeline.parameters.releases-slack-channel >>
#          context:
#            - hmpps-common-vars
#            - manage-my-prison-prod
#          requires:
#            - request-prod-approval

  security:
    triggers:
      - schedule:
          cron: "30 5 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - check_outdated:
          context:
            - hmpps-common-vars
      - hmpps/npm_security_audit:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/trivy_latest_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/veracode_pipeline_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
  security-weekly:
    triggers:
      - schedule:
          cron: "0 5 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
