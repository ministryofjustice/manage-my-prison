{% extends "../partials/layout.njk" %}

{% from "govuk/components/tabs/macro.njk" import govukTabs %}
{% from "govuk/components/table/macro.njk" import govukTable %}

{% set pageTitle = applicationName + " – Behaviour entries" %}

{% block content %}

  <h1 class="govuk-heading-l">Population age</h1>

  {% from "govuk/components/details/macro.njk" import govukDetails %}

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      {{ govukDetails({
        summaryText: "Measuring maturity",
        html: "Maturity is still developing in people throughout their 20s. These resources can help you identify which prisoners might have low maturity and help support them to manage their emotions:
  <br><a href='#' class='govuk-link'>Maturity screening tool</a>
  <br><a href='#' class='govuk-link'>Choices and changes resource pack</a>"
      }) }}

      <h3 class="govuk-heading-s">Percentage of the basic population compared with percentage of the total population by age group.</h3>
    </div>
  </div>

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
      {{ visPopulation | safe }}
    </div>
  </div>

  <hr class="govuk-section-break govuk-section-break--xl govuk-section-break--visible">

  <h1 class="govuk-heading-l">Behaviour entries</h1>

  <div class="govuk-grid-row" id="summary">
    {# Positive half #}
    <div class="govuk-grid-column-one-half" id="summary-positive">
      <h2 class="govuk-heading-m">Positive 7-day view</h2>

      <div class="govuk-grid-row">
        <div class="govuk-grid-column-one-half">
          <span>XXX</span> Positive entries
          <br />
          <span>+X%</span> vs 7 days ago
        </div>

        <div class="govuk-grid-column-one-half">
          <span>XX</span> prisoners
          <br />
          <span>XX</span> on Basic
          <br />
          <span>XX</span> on Standard
          <br />
          <span>XX</span> on Enhanced
        </div>
      </div>
    </div>

    {# Negative half #}
    <div class="govuk-grid-column-one-half" id="summary-negative">
      <h2 class="govuk-heading-m">Negative 7-day view</h2>

      <div class="govuk-grid-row">
        <div class="govuk-grid-column-one-half">
          <span>XXX</span> Negative entries
          <span>+X%</span> vs 7 days ago
        </div>

        <div class="govuk-grid-column-one-half">
          <span>XX</span> prisoners
          <br />
          <span>XX</span> on Basic
          <br />
          <span>XX</span> on Standard
          <br />
          <span>XX</span> on Enhanced
        </div>
      </div>
    </div>
  </div>

  <p class="govuk-body-m govuk-!-margin-bottom-2">Overview</p>

  {% set pastWeekHtml %}
    <h2 class="govuk-heading-m">Vega test 3: Compile Vega-Lite spec into a Vega spec</h2>
    <ul class="govuk-list govuk-list--bullet">
      <li>Uses Vega-Lite specification instead of Vega specification. Vega-Lite is an higher level format compared to Vega.</li>
      <li>Specification is hardcoded (not read from S3 in this example)</li>
      <li>Data is also embedded into specification (not read from S3 in this example)</li>
      <li>Vega-Lite spec is compiled/converted into a Vega spec and then rendered.</li>
    </ul>
    {{ vis3 | safe }}
  {% endset -%}

  {% set last4weeksHtml %}
    <h2 class="govuk-heading-m">Vega test 2: Data was injected into visualisation</h2>
    <ul class="govuk-list govuk-list--bullet">
      <li>Visualisation specification read from S3.</li>
      <li>Data read from S3 using S3 select for filtering.</li>
      <li>Filtered data is passed to the visualisation for rendering.</li>
    </ul>
    {{ vis2 | safe }}
  {% endset -%}

  {% set last3monthsHtml %}
    <h2 class="govuk-heading-m">Vega test 1: Render straight from S3</h2>
    <ul class="govuk-list govuk-list--bullet">
      <li>Visualisation specification read from S3</li>
      <li>Data was embedded into the visualisation file.</li>
    </ul>
    {{ vis1 | safe }}
  {% endset -%}

  {% set interactiveVisualisationHtml %}
    <h2 class="govuk-heading-m">Vega-Lite: Interactive test</h2>
    <ul class="govuk-list govuk-list--bullet">
      <li>Rendered on the client side (in the user browser)</li>
      <li>Data in separate URL, currently static file.</li>
    </ul>

    <div id='interactive-visualisation'>
    </div>
  {% endset -%}

  {{ govukTabs({
    items: [
      {
        label: "Last 7 days",
        id: "last-7-days",
        panel: {
          html: pastWeekHtml
        }
      },
      {
        label: "Past week",
        id: "last-4-weeks",
        panel: {
          html: last4weeksHtml
        }
      },
      {
        label: "Last 3 months",
        id: "last-3-months",
        panel: {
          html: last3monthsHtml
        }
      },
      {
        label: "Table view",
        id: "table-view",
        panel: {
          html: interactiveVisualisationHtml
        }
      }
    ]
  }) }}

  <hr class="govuk-section-break govuk-section-break--xl govuk-section-break--visible">

  <h1 class="govuk-heading-l">Seattle Weather – Athena Sample</h1>
  <p>
    <a href="/athena-sample">View</a>
  </p>

{% endblock %}


{% block bodyEnd %}
  {{ super() }}

  <!-- Import Vega & Vega-Lite -->
  <script src="/assets/js/vega.min.js"></script>
  <script src="/assets/js/vega-lite.min.js"></script>
  <!-- Import vega-embed -->
  <script src="/assets/js/vega-embed.min.js"></script>

  <script nonce='{{ cspNonce }}'>
    // const dataUrlSeattleWeather = 'https://raw.githubusercontent.com/vega/vega/master/docs/data/seattle-weather.csv';
    const dataUrlSeattleWeather = 'data/seattle-weather.csv';
    const spec = {
      "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
      "title": "Seattle Weather, 2012-2015",
      "data": {
        "url": dataUrlSeattleWeather,
      },
      "vconcat": [
        {
          "encoding": {
            "color": {
              "condition": {
                "param": "brush",
                "title": "Weather",
                "field": "weather",
                "type": "nominal",
                "scale": {
                  "domain": ["sun", "fog", "drizzle", "rain", "snow"],
                  "range": ["#e7ba52", "#a7a7a7", "#aec7e8", "#1f77b4", "#9467bd"]
                }
              },
              "value": "lightgray"
            },
            "size": {
              "title": "Precipitation",
              "field": "precipitation",
              "scale": {"domain": [-1, 50]},
              "type": "quantitative"
            },
            "x": {
              "field": "date",
              "timeUnit": "monthdate",
              "title": "Date",
              "axis": {"format": "%b"}
            },
            "y": {
              "title": "Maximum Daily Temperature (C)",
              "field": "temp_max",
              "scale": {"domain": [-5, 40]},
              "type": "quantitative"
            }
          },
          "width": 600,
          "height": 300,
          "mark": "point",
          "params": [{
            "name": "brush",
            "select": {"type": "interval", "encodings": ["x"]}
          }],
          "transform": [{"filter": {"param": "click"}}]
        },
        {
          "encoding": {
            "color": {
              "condition": {
                "param": "click",
                "field": "weather",
                "scale": {
                  "domain": ["sun", "fog", "drizzle", "rain", "snow"],
                  "range": ["#e7ba52", "#a7a7a7", "#aec7e8", "#1f77b4", "#9467bd"]
                }
              },
              "value": "lightgray"
            },
            "x": {"aggregate": "count"},
            "y": {"title": "Weather", "field": "weather"}
          },
          "width": 600,
          "mark": "bar",
          "params": [{
            "name": "click",
            "select": {"type": "point", "encodings": ["color"]}
          }],
          "transform": [{"filter": {"param": "brush"}}]
        }
      ]
    };

    console.log(spec);

    vegaEmbed('#interactive-visualisation', spec).then(function(result) {
    // Access the Vega view instance (https://vega.github.io/vega/docs/api/view/) as result.view
    }).catch(console.error);
  </script>
{% endblock %}
